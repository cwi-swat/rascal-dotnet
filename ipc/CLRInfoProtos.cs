// Generated by the protocol buffer compiler.  DO NOT EDIT!

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Landman.Rascal.CLRInfo.Protobuf {
  
  public static partial class CLRInfoProtos {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_Landman_Rascal_CLRInfo_Protobuf_EntityRel__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Landman.Rascal.CLRInfo.Protobuf.EntityRel, global::Landman.Rascal.CLRInfo.Protobuf.EntityRel.Builder> internal__static_Landman_Rascal_CLRInfo_Protobuf_EntityRel__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Landman_Rascal_CLRInfo_Protobuf_ModifierRel__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel, global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel.Builder> internal__static_Landman_Rascal_CLRInfo_Protobuf_ModifierRel__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Landman_Rascal_CLRInfo_Protobuf_ConstrainRel__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel, global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel.Builder> internal__static_Landman_Rascal_CLRInfo_Protobuf_ConstrainRel__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Landman_Rascal_CLRInfo_Protobuf_Entity__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Landman.Rascal.CLRInfo.Protobuf.Entity, global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder> internal__static_Landman_Rascal_CLRInfo_Protobuf_Entity__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Landman_Rascal_CLRInfo_Protobuf_Id__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Landman.Rascal.CLRInfo.Protobuf.Id, global::Landman.Rascal.CLRInfo.Protobuf.Id.Builder> internal__static_Landman_Rascal_CLRInfo_Protobuf_Id__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Landman_Rascal_CLRInfo_Protobuf_Constrain__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Landman.Rascal.CLRInfo.Protobuf.Constrain, global::Landman.Rascal.CLRInfo.Protobuf.Constrain.Builder> internal__static_Landman_Rascal_CLRInfo_Protobuf_Constrain__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Landman_Rascal_CLRInfo_Protobuf_InformationRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Landman.Rascal.CLRInfo.Protobuf.InformationRequest, global::Landman.Rascal.CLRInfo.Protobuf.InformationRequest.Builder> internal__static_Landman_Rascal_CLRInfo_Protobuf_InformationRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Landman_Rascal_CLRInfo_Protobuf_InformationResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Landman.Rascal.CLRInfo.Protobuf.InformationResponse, global::Landman.Rascal.CLRInfo.Protobuf.InformationResponse.Builder> internal__static_Landman_Rascal_CLRInfo_Protobuf_InformationResponse__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static CLRInfoProtos() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Cg1jbHJpbmZvLnByb3RvEh9MYW5kbWFuLlJhc2NhbC5DTFJJbmZvLlByb3Rv" + 
          "YnVmGiRnb29nbGUvcHJvdG9idWYvY3NoYXJwX29wdGlvbnMucHJvdG8idwoJ" + 
          "RW50aXR5UmVsEjUKBEZyb20YASACKAsyJy5MYW5kbWFuLlJhc2NhbC5DTFJJ" + 
          "bmZvLlByb3RvYnVmLkVudGl0eRIzCgJUbxgCIAIoCzInLkxhbmRtYW4uUmFz" + 
          "Y2FsLkNMUkluZm8uUHJvdG9idWYuRW50aXR5IoMBCgtNb2RpZmllclJlbBI3" + 
          "CgZFbnRpdHkYASACKAsyJy5MYW5kbWFuLlJhc2NhbC5DTFJJbmZvLlByb3Rv" + 
          "YnVmLkVudGl0eRI7CghNb2RpZmllchgCIAIoDjIpLkxhbmRtYW4uUmFzY2Fs" + 
          "LkNMUkluZm8uUHJvdG9idWYuTW9kaWZpZXIihgEKDENvbnN0cmFpblJlbBI3" + 
          "CgZFbnRpdHkYASACKAsyJy5MYW5kbWFuLlJhc2NhbC5DTFJJbmZvLlByb3Rv" + 
          "YnVmLkVudGl0eRI9CglDb25zdHJhaW4YAiACKAsyKi5MYW5kbWFuLlJhc2Nh" + 
          "bC5DTFJJbmZvLlByb3RvYnVmLkNvbnN0cmFpbiI6CgZFbnRpdHkSMAoDSWRz" + 
          "GAEgAygLMiMuTGFuZG1hbi5SYXNjYWwuQ0xSSW5mby5Qcm90b2J1Zi5JZCL0" + 
          "BwoCSWQSOAoES2luZBgBIAIoDjIqLkxhbmRtYW4uUmFzY2FsLkNMUkluZm8u" + 
          "UHJvdG9idWYuSWQuSWRLaW5kEgwKBE5hbWUYAiABKAkSNwoGUGFyYW1zGAMg" + 
          "AygLMicuTGFuZG1hbi5SYXNjYWwuQ0xSSW5mby5Qcm90b2J1Zi5FbnRpdHkS" + 
          "OwoKUmV0dXJuVHlwZRgEIAEoCzInLkxhbmRtYW4uUmFzY2FsLkNMUkluZm8u" + 
          "UHJvdG9idWYuRW50aXR5EjcKBlNldHRlchgFIAEoCzInLkxhbmRtYW4uUmFz" + 
          "Y2FsLkNMUkluZm8uUHJvdG9idWYuRW50aXR5EjcKBkdldHRlchgGIAEoCzIn" + 
          "LkxhbmRtYW4uUmFzY2FsLkNMUkluZm8uUHJvdG9idWYuRW50aXR5EgsKA19J" + 
          "ZBgHIAEoBRJJCg5fUHJpbWl0aXZlVHlwZRgIIAEoDjIxLkxhbmRtYW4uUmFz" + 
          "Y2FsLkNMUkluZm8uUHJvdG9idWYuSWQuUHJpbWl0aXZlVHlwZRI8CgtFbGVt" + 
          "ZW50VHlwZRgJIAEoCzInLkxhbmRtYW4uUmFzY2FsLkNMUkluZm8uUHJvdG9i" + 
          "dWYuRW50aXR5IucCCgZJZEtpbmQSDQoJTmFtZXNwYWNlEAASCQoFQ2xhc3MQ" + 
          "ARIQCgxHZW5lcmljQ2xhc3MQAhINCglJbnRlcmZhY2UQAxIUChBHZW5lcmlj" + 
          "SW50ZXJmYWNlEAQSDwoLRW51bWVyYXRpb24QBRISCg5Bbm9ueW1vdXNDbGFz" + 
          "cxAGEhAKDERpc3BsYXlDbGFzcxAHEgoKBk1ldGhvZBAKEg8KC0NvbnN0cnVj" + 
          "dG9yEAsSDQoJRmluYWxpemVyEAwSDwoLSW5pdGlhbGl6ZXIQDRIJCgVGaWVs" + 
          "ZBAUEgwKCFByb3BlcnR5EBUSCQoFRXZlbnQQFhINCglQYXJhbWV0ZXIQFxIM" + 
          "CghWYXJpYWJsZRAYEhAKDEVudW1Db25zdGFudBAZEg0KCVByaW1pdGl2ZRAe" + 
          "EgkKBUFycmF5EB8SEQoNVHlwZVBhcmFtZXRlchAoEgoKBlVua293bhApEgwK" + 
          "CFdpbGRjYXJkECoivQEKDVByaW1pdGl2ZVR5cGUSCAoEQm9vbBAAEggKBEJ5" + 
          "dGUQARIJCgVTYnl0ZRACEggKBENoYXIQAxILCgdEZWNpbWFsEAQSCgoGRG91" + 
          "YmxlEAUSCQoFRmxvYXQQBhIHCgNJbnQQBxIICgRVaW50EAgSCAoETG9uZxAJ" + 
          "EgkKBVVsb25nEAoSCgoGT2JqZWN0EAsSCQoFU2hvcnQQDBIKCgZVc2hvcnQQ" + 
          "DRIKCgZTdHJpbmcQDhIICgRWb2lkEA8i6wEKCUNvbnN0cmFpbhJGCgRLaW5k" + 
          "GAEgAigOMjguTGFuZG1hbi5SYXNjYWwuQ0xSSW5mby5Qcm90b2J1Zi5Db25z" + 
          "dHJhaW4uQ29uc3RyYWluS2luZBJACg9Db25zdHJhaW5FbnRpdHkYAiABKAsy" + 
          "Jy5MYW5kbWFuLlJhc2NhbC5DTFJJbmZvLlByb3RvYnVmLkVudGl0eSJUCg1D" + 
          "b25zdHJhaW5LaW5kEggKBE5vbmUQABIKCgZFbnRpdHkQARILCgdJc0NsYXNz" + 
          "EAISDAoISXNTdHJ1Y3QQAxISCg5IYXNDb25zdHJ1Y3RvchAEIigKEkluZm9y" + 
          "bWF0aW9uUmVxdWVzdBISCgpBc3NlbWJsaWVzGAEgAygJItYEChNJbmZvcm1h" + 
          "dGlvblJlc3BvbnNlEjYKBVR5cGVzGAEgAygLMicuTGFuZG1hbi5SYXNjYWwu" + 
          "Q0xSSW5mby5Qcm90b2J1Zi5FbnRpdHkSOAoHTWV0aG9kcxgCIAMoCzInLkxh" + 
          "bmRtYW4uUmFzY2FsLkNMUkluZm8uUHJvdG9idWYuRW50aXR5EjcKBkZpZWxk" + 
          "cxgDIAMoCzInLkxhbmRtYW4uUmFzY2FsLkNMUkluZm8uUHJvdG9idWYuRW50" + 
          "aXR5EjsKClByb3BlcnRpZXMYBCADKAsyJy5MYW5kbWFuLlJhc2NhbC5DTFJJ" + 
          "bmZvLlByb3RvYnVmLkVudGl0eRJEChBUeXBlc0luaGVyaXRhbmNlGAogAygL" + 
          "MiouTGFuZG1hbi5SYXNjYWwuQ0xSSW5mby5Qcm90b2J1Zi5FbnRpdHlSZWwS" + 
          "RQoRVHlwZXNJbXBsZW1lbnRpbmcYCyADKAsyKi5MYW5kbWFuLlJhc2NhbC5D" + 
          "TFJJbmZvLlByb3RvYnVmLkVudGl0eVJlbBI/CgtNZXRob2RDYWxscxgUIAMo" + 
          "CzIqLkxhbmRtYW4uUmFzY2FsLkNMUkluZm8uUHJvdG9idWYuRW50aXR5UmVs" + 
          "Ej8KCU1vZGlmaWVycxgeIAMoCzIsLkxhbmRtYW4uUmFzY2FsLkNMUkluZm8u" + 
          "UHJvdG9idWYuTW9kaWZpZXJSZWwSSAoRR2VuZXJpY0NvbnN0cmFpbnMYHyAD" + 
          "KAsyLS5MYW5kbWFuLlJhc2NhbC5DTFJJbmZvLlByb3RvYnVmLkNvbnN0cmFp" + 
          "blJlbCpaCghNb2RpZmllchIKCgZQdWJsaWMQABINCglQcm90ZWN0ZWQQARIM" + 
          "CghJbnRlcm5hbBACEgsKB1ByaXZhdGUQAxIKCgZTdGF0aWMQBBIMCghBYnN0" + 
          "cmFjdBAFQjVIAcI+MAofTGFuZG1hbi5SYXNjYWwuQ0xSSW5mby5Qcm90b2J1" + 
          "ZhINQ0xSSW5mb1Byb3Rvcw==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Landman_Rascal_CLRInfo_Protobuf_EntityRel__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Landman_Rascal_CLRInfo_Protobuf_EntityRel__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Landman.Rascal.CLRInfo.Protobuf.EntityRel, global::Landman.Rascal.CLRInfo.Protobuf.EntityRel.Builder>(internal__static_Landman_Rascal_CLRInfo_Protobuf_EntityRel__Descriptor,
                new string[] { "From", "To", });
        internal__static_Landman_Rascal_CLRInfo_Protobuf_ModifierRel__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Landman_Rascal_CLRInfo_Protobuf_ModifierRel__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel, global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel.Builder>(internal__static_Landman_Rascal_CLRInfo_Protobuf_ModifierRel__Descriptor,
                new string[] { "Entity", "Modifier", });
        internal__static_Landman_Rascal_CLRInfo_Protobuf_ConstrainRel__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Landman_Rascal_CLRInfo_Protobuf_ConstrainRel__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel, global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel.Builder>(internal__static_Landman_Rascal_CLRInfo_Protobuf_ConstrainRel__Descriptor,
                new string[] { "Entity", "Constrain", });
        internal__static_Landman_Rascal_CLRInfo_Protobuf_Entity__Descriptor = Descriptor.MessageTypes[3];
        internal__static_Landman_Rascal_CLRInfo_Protobuf_Entity__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Landman.Rascal.CLRInfo.Protobuf.Entity, global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder>(internal__static_Landman_Rascal_CLRInfo_Protobuf_Entity__Descriptor,
                new string[] { "Ids", });
        internal__static_Landman_Rascal_CLRInfo_Protobuf_Id__Descriptor = Descriptor.MessageTypes[4];
        internal__static_Landman_Rascal_CLRInfo_Protobuf_Id__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Landman.Rascal.CLRInfo.Protobuf.Id, global::Landman.Rascal.CLRInfo.Protobuf.Id.Builder>(internal__static_Landman_Rascal_CLRInfo_Protobuf_Id__Descriptor,
                new string[] { "Kind", "Name", "Params", "ReturnType", "Setter", "Getter", "Id_", "PrimitiveType", "ElementType", });
        internal__static_Landman_Rascal_CLRInfo_Protobuf_Constrain__Descriptor = Descriptor.MessageTypes[5];
        internal__static_Landman_Rascal_CLRInfo_Protobuf_Constrain__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Landman.Rascal.CLRInfo.Protobuf.Constrain, global::Landman.Rascal.CLRInfo.Protobuf.Constrain.Builder>(internal__static_Landman_Rascal_CLRInfo_Protobuf_Constrain__Descriptor,
                new string[] { "Kind", "ConstrainEntity", });
        internal__static_Landman_Rascal_CLRInfo_Protobuf_InformationRequest__Descriptor = Descriptor.MessageTypes[6];
        internal__static_Landman_Rascal_CLRInfo_Protobuf_InformationRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Landman.Rascal.CLRInfo.Protobuf.InformationRequest, global::Landman.Rascal.CLRInfo.Protobuf.InformationRequest.Builder>(internal__static_Landman_Rascal_CLRInfo_Protobuf_InformationRequest__Descriptor,
                new string[] { "Assemblies", });
        internal__static_Landman_Rascal_CLRInfo_Protobuf_InformationResponse__Descriptor = Descriptor.MessageTypes[7];
        internal__static_Landman_Rascal_CLRInfo_Protobuf_InformationResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Landman.Rascal.CLRInfo.Protobuf.InformationResponse, global::Landman.Rascal.CLRInfo.Protobuf.InformationResponse.Builder>(internal__static_Landman_Rascal_CLRInfo_Protobuf_InformationResponse__Descriptor,
                new string[] { "Types", "Methods", "Fields", "Properties", "TypesInheritance", "TypesImplementing", "MethodCalls", "Modifiers", "GenericConstrains", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Google.ProtocolBuffers.DescriptorProtos.CSharpOptions.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Google.ProtocolBuffers.DescriptorProtos.CSharpOptions.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum Modifier {
    Public = 0,
    Protected = 1,
    Internal = 2,
    Private = 3,
    Static = 4,
    Abstract = 5,
  }
  
  #endregion
  
  #region Messages
  public sealed partial class EntityRel : pb::GeneratedMessage<EntityRel, EntityRel.Builder> {
    private static readonly EntityRel defaultInstance = new Builder().BuildPartial();
    public static EntityRel DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EntityRel DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override EntityRel ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.internal__static_Landman_Rascal_CLRInfo_Protobuf_EntityRel__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EntityRel, EntityRel.Builder> InternalFieldAccessors {
      get { return global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.internal__static_Landman_Rascal_CLRInfo_Protobuf_EntityRel__FieldAccessorTable; }
    }
    
    public const int FromFieldNumber = 1;
    private bool hasFrom;
    private global::Landman.Rascal.CLRInfo.Protobuf.Entity from_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance;
    public bool HasFrom {
      get { return hasFrom; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Entity From {
      get { return from_; }
    }
    
    public const int ToFieldNumber = 2;
    private bool hasTo;
    private global::Landman.Rascal.CLRInfo.Protobuf.Entity to_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance;
    public bool HasTo {
      get { return hasTo; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Entity To {
      get { return to_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFrom) return false;
        if (!hasTo) return false;
        if (!From.IsInitialized) return false;
        if (!To.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasFrom) {
        output.WriteMessage(1, From);
      }
      if (HasTo) {
        output.WriteMessage(2, To);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasFrom) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, From);
        }
        if (HasTo) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, To);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static EntityRel ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntityRel ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntityRel ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntityRel ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntityRel ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntityRel ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EntityRel ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EntityRel ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EntityRel ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntityRel ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EntityRel prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<EntityRel, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      EntityRel result = new EntityRel();
      
      protected override EntityRel MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new EntityRel();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Landman.Rascal.CLRInfo.Protobuf.EntityRel.Descriptor; }
      }
      
      public override EntityRel DefaultInstanceForType {
        get { return global::Landman.Rascal.CLRInfo.Protobuf.EntityRel.DefaultInstance; }
      }
      
      public override EntityRel BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        EntityRel returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EntityRel) {
          return MergeFrom((EntityRel) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EntityRel other) {
        if (other == global::Landman.Rascal.CLRInfo.Protobuf.EntityRel.DefaultInstance) return this;
        if (other.HasFrom) {
          MergeFrom(other.From);
        }
        if (other.HasTo) {
          MergeTo(other.To);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder();
              if (HasFrom) {
                subBuilder.MergeFrom(From);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              From = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder();
              if (HasTo) {
                subBuilder.MergeFrom(To);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              To = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasFrom {
       get { return result.HasFrom; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Entity From {
        get { return result.From; }
        set { SetFrom(value); }
      }
      public Builder SetFrom(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasFrom = true;
        result.from_ = value;
        return this;
      }
      public Builder SetFrom(global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasFrom = true;
        result.from_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFrom(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasFrom &&
            result.from_ != global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance) {
            result.from_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder(result.from_).MergeFrom(value).BuildPartial();
        } else {
          result.from_ = value;
        }
        result.hasFrom = true;
        return this;
      }
      public Builder ClearFrom() {
        result.hasFrom = false;
        result.from_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance;
        return this;
      }
      
      public bool HasTo {
       get { return result.HasTo; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Entity To {
        get { return result.To; }
        set { SetTo(value); }
      }
      public Builder SetTo(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasTo = true;
        result.to_ = value;
        return this;
      }
      public Builder SetTo(global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasTo = true;
        result.to_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTo(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasTo &&
            result.to_ != global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance) {
            result.to_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder(result.to_).MergeFrom(value).BuildPartial();
        } else {
          result.to_ = value;
        }
        result.hasTo = true;
        return this;
      }
      public Builder ClearTo() {
        result.hasTo = false;
        result.to_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance;
        return this;
      }
    }
    static EntityRel() {
      object.ReferenceEquals(global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.Descriptor, null);
    }
  }
  
  public sealed partial class ModifierRel : pb::GeneratedMessage<ModifierRel, ModifierRel.Builder> {
    private static readonly ModifierRel defaultInstance = new Builder().BuildPartial();
    public static ModifierRel DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ModifierRel DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ModifierRel ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.internal__static_Landman_Rascal_CLRInfo_Protobuf_ModifierRel__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ModifierRel, ModifierRel.Builder> InternalFieldAccessors {
      get { return global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.internal__static_Landman_Rascal_CLRInfo_Protobuf_ModifierRel__FieldAccessorTable; }
    }
    
    public const int EntityFieldNumber = 1;
    private bool hasEntity;
    private global::Landman.Rascal.CLRInfo.Protobuf.Entity entity_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance;
    public bool HasEntity {
      get { return hasEntity; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Entity Entity {
      get { return entity_; }
    }
    
    public const int ModifierFieldNumber = 2;
    private bool hasModifier;
    private global::Landman.Rascal.CLRInfo.Protobuf.Modifier modifier_ = global::Landman.Rascal.CLRInfo.Protobuf.Modifier.Public;
    public bool HasModifier {
      get { return hasModifier; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Modifier Modifier {
      get { return modifier_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEntity) return false;
        if (!hasModifier) return false;
        if (!Entity.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasEntity) {
        output.WriteMessage(1, Entity);
      }
      if (HasModifier) {
        output.WriteEnum(2, (int) Modifier);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasEntity) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Entity);
        }
        if (HasModifier) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Modifier);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ModifierRel ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModifierRel ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModifierRel ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModifierRel ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModifierRel ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModifierRel ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ModifierRel ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ModifierRel ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ModifierRel ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModifierRel ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ModifierRel prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ModifierRel, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ModifierRel result = new ModifierRel();
      
      protected override ModifierRel MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ModifierRel();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel.Descriptor; }
      }
      
      public override ModifierRel DefaultInstanceForType {
        get { return global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel.DefaultInstance; }
      }
      
      public override ModifierRel BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ModifierRel returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ModifierRel) {
          return MergeFrom((ModifierRel) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ModifierRel other) {
        if (other == global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel.DefaultInstance) return this;
        if (other.HasEntity) {
          MergeEntity(other.Entity);
        }
        if (other.HasModifier) {
          Modifier = other.Modifier;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder();
              if (HasEntity) {
                subBuilder.MergeFrom(Entity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Entity = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              int rawValue = input.ReadEnum();
              if (!global::System.Enum.IsDefined(typeof(global::Landman.Rascal.CLRInfo.Protobuf.Modifier), rawValue)) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong) rawValue);
              } else {
                Modifier = (global::Landman.Rascal.CLRInfo.Protobuf.Modifier) rawValue;
              }
              break;
            }
          }
        }
      }
      
      
      public bool HasEntity {
       get { return result.HasEntity; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Entity Entity {
        get { return result.Entity; }
        set { SetEntity(value); }
      }
      public Builder SetEntity(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasEntity = true;
        result.entity_ = value;
        return this;
      }
      public Builder SetEntity(global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasEntity = true;
        result.entity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntity(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasEntity &&
            result.entity_ != global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance) {
            result.entity_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder(result.entity_).MergeFrom(value).BuildPartial();
        } else {
          result.entity_ = value;
        }
        result.hasEntity = true;
        return this;
      }
      public Builder ClearEntity() {
        result.hasEntity = false;
        result.entity_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance;
        return this;
      }
      
      public bool HasModifier {
       get { return result.HasModifier; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Modifier Modifier {
        get { return result.Modifier; }
        set { SetModifier(value); }
      }
      public Builder SetModifier(global::Landman.Rascal.CLRInfo.Protobuf.Modifier value) {
        result.hasModifier = true;
        result.modifier_ = value;
        return this;
      }
      public Builder ClearModifier() {
        result.hasModifier = false;
        result.modifier_ = global::Landman.Rascal.CLRInfo.Protobuf.Modifier.Public;
        return this;
      }
    }
    static ModifierRel() {
      object.ReferenceEquals(global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.Descriptor, null);
    }
  }
  
  public sealed partial class ConstrainRel : pb::GeneratedMessage<ConstrainRel, ConstrainRel.Builder> {
    private static readonly ConstrainRel defaultInstance = new Builder().BuildPartial();
    public static ConstrainRel DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ConstrainRel DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ConstrainRel ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.internal__static_Landman_Rascal_CLRInfo_Protobuf_ConstrainRel__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ConstrainRel, ConstrainRel.Builder> InternalFieldAccessors {
      get { return global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.internal__static_Landman_Rascal_CLRInfo_Protobuf_ConstrainRel__FieldAccessorTable; }
    }
    
    public const int EntityFieldNumber = 1;
    private bool hasEntity;
    private global::Landman.Rascal.CLRInfo.Protobuf.Entity entity_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance;
    public bool HasEntity {
      get { return hasEntity; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Entity Entity {
      get { return entity_; }
    }
    
    public const int ConstrainFieldNumber = 2;
    private bool hasConstrain;
    private global::Landman.Rascal.CLRInfo.Protobuf.Constrain constrain_ = global::Landman.Rascal.CLRInfo.Protobuf.Constrain.DefaultInstance;
    public bool HasConstrain {
      get { return hasConstrain; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Constrain Constrain {
      get { return constrain_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEntity) return false;
        if (!hasConstrain) return false;
        if (!Entity.IsInitialized) return false;
        if (!Constrain.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasEntity) {
        output.WriteMessage(1, Entity);
      }
      if (HasConstrain) {
        output.WriteMessage(2, Constrain);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasEntity) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Entity);
        }
        if (HasConstrain) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Constrain);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ConstrainRel ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConstrainRel ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConstrainRel ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConstrainRel ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConstrainRel ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConstrainRel ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ConstrainRel ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ConstrainRel ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ConstrainRel ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConstrainRel ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ConstrainRel prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ConstrainRel, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ConstrainRel result = new ConstrainRel();
      
      protected override ConstrainRel MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ConstrainRel();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel.Descriptor; }
      }
      
      public override ConstrainRel DefaultInstanceForType {
        get { return global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel.DefaultInstance; }
      }
      
      public override ConstrainRel BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ConstrainRel returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ConstrainRel) {
          return MergeFrom((ConstrainRel) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ConstrainRel other) {
        if (other == global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel.DefaultInstance) return this;
        if (other.HasEntity) {
          MergeEntity(other.Entity);
        }
        if (other.HasConstrain) {
          MergeConstrain(other.Constrain);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder();
              if (HasEntity) {
                subBuilder.MergeFrom(Entity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Entity = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Landman.Rascal.CLRInfo.Protobuf.Constrain.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.Constrain.CreateBuilder();
              if (HasConstrain) {
                subBuilder.MergeFrom(Constrain);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Constrain = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasEntity {
       get { return result.HasEntity; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Entity Entity {
        get { return result.Entity; }
        set { SetEntity(value); }
      }
      public Builder SetEntity(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasEntity = true;
        result.entity_ = value;
        return this;
      }
      public Builder SetEntity(global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasEntity = true;
        result.entity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntity(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasEntity &&
            result.entity_ != global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance) {
            result.entity_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder(result.entity_).MergeFrom(value).BuildPartial();
        } else {
          result.entity_ = value;
        }
        result.hasEntity = true;
        return this;
      }
      public Builder ClearEntity() {
        result.hasEntity = false;
        result.entity_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance;
        return this;
      }
      
      public bool HasConstrain {
       get { return result.HasConstrain; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Constrain Constrain {
        get { return result.Constrain; }
        set { SetConstrain(value); }
      }
      public Builder SetConstrain(global::Landman.Rascal.CLRInfo.Protobuf.Constrain value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasConstrain = true;
        result.constrain_ = value;
        return this;
      }
      public Builder SetConstrain(global::Landman.Rascal.CLRInfo.Protobuf.Constrain.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasConstrain = true;
        result.constrain_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConstrain(global::Landman.Rascal.CLRInfo.Protobuf.Constrain value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasConstrain &&
            result.constrain_ != global::Landman.Rascal.CLRInfo.Protobuf.Constrain.DefaultInstance) {
            result.constrain_ = global::Landman.Rascal.CLRInfo.Protobuf.Constrain.CreateBuilder(result.constrain_).MergeFrom(value).BuildPartial();
        } else {
          result.constrain_ = value;
        }
        result.hasConstrain = true;
        return this;
      }
      public Builder ClearConstrain() {
        result.hasConstrain = false;
        result.constrain_ = global::Landman.Rascal.CLRInfo.Protobuf.Constrain.DefaultInstance;
        return this;
      }
    }
    static ConstrainRel() {
      object.ReferenceEquals(global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.Descriptor, null);
    }
  }
  
  public sealed partial class Entity : pb::GeneratedMessage<Entity, Entity.Builder> {
    private static readonly Entity defaultInstance = new Builder().BuildPartial();
    public static Entity DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Entity DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override Entity ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.internal__static_Landman_Rascal_CLRInfo_Protobuf_Entity__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Entity, Entity.Builder> InternalFieldAccessors {
      get { return global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.internal__static_Landman_Rascal_CLRInfo_Protobuf_Entity__FieldAccessorTable; }
    }
    
    public const int IdsFieldNumber = 1;
    private pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.Id> ids_ = new pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.Id>();
    public scg::IList<global::Landman.Rascal.CLRInfo.Protobuf.Id> IdsList {
      get { return ids_; }
    }
    public int IdsCount {
      get { return ids_.Count; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Id GetIds(int index) {
      return ids_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.Id element in IdsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::Landman.Rascal.CLRInfo.Protobuf.Id element in IdsList) {
        output.WriteMessage(1, element);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.Id element in IdsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Entity ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Entity ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Entity ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Entity ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Entity ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Entity ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Entity ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Entity ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Entity ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Entity ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Entity prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<Entity, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      Entity result = new Entity();
      
      protected override Entity MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new Entity();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Landman.Rascal.CLRInfo.Protobuf.Entity.Descriptor; }
      }
      
      public override Entity DefaultInstanceForType {
        get { return global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance; }
      }
      
      public override Entity BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.ids_.MakeReadOnly();
        Entity returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Entity) {
          return MergeFrom((Entity) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Entity other) {
        if (other == global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance) return this;
        if (other.ids_.Count != 0) {
          base.AddRange(other.ids_, result.ids_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::Landman.Rascal.CLRInfo.Protobuf.Id.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.Id.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddIds(subBuilder.BuildPartial());
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.Id> IdsList {
        get { return result.ids_; }
      }
      public int IdsCount {
        get { return result.IdsCount; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Id GetIds(int index) {
        return result.GetIds(index);
      }
      public Builder SetIds(int index, global::Landman.Rascal.CLRInfo.Protobuf.Id value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.ids_[index] = value;
        return this;
      }
      public Builder SetIds(int index, global::Landman.Rascal.CLRInfo.Protobuf.Id.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.ids_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddIds(global::Landman.Rascal.CLRInfo.Protobuf.Id value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.ids_.Add(value);
        return this;
      }
      public Builder AddIds(global::Landman.Rascal.CLRInfo.Protobuf.Id.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.ids_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeIds(scg::IEnumerable<global::Landman.Rascal.CLRInfo.Protobuf.Id> values) {
        base.AddRange(values, result.ids_);
        return this;
      }
      public Builder ClearIds() {
        result.ids_.Clear();
        return this;
      }
    }
    static Entity() {
      object.ReferenceEquals(global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.Descriptor, null);
    }
  }
  
  public sealed partial class Id : pb::GeneratedMessage<Id, Id.Builder> {
    private static readonly Id defaultInstance = new Builder().BuildPartial();
    public static Id DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Id DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override Id ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.internal__static_Landman_Rascal_CLRInfo_Protobuf_Id__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Id, Id.Builder> InternalFieldAccessors {
      get { return global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.internal__static_Landman_Rascal_CLRInfo_Protobuf_Id__FieldAccessorTable; }
    }
    
    #region Nested types
    public static class Types {
      public enum IdKind {
        Namespace = 0,
        Class = 1,
        GenericClass = 2,
        Interface = 3,
        GenericInterface = 4,
        Enumeration = 5,
        AnonymousClass = 6,
        DisplayClass = 7,
        Method = 10,
        Constructor = 11,
        Finalizer = 12,
        Initializer = 13,
        Field = 20,
        Property = 21,
        Event = 22,
        Parameter = 23,
        Variable = 24,
        EnumConstant = 25,
        Primitive = 30,
        Array = 31,
        TypeParameter = 40,
        Unkown = 41,
        Wildcard = 42,
      }
      
      public enum PrimitiveType {
        Bool = 0,
        Byte = 1,
        Sbyte = 2,
        Char = 3,
        Decimal = 4,
        Double = 5,
        Float = 6,
        Int = 7,
        Uint = 8,
        Long = 9,
        Ulong = 10,
        Object = 11,
        Short = 12,
        Ushort = 13,
        String = 14,
        Void = 15,
      }
      
    }
    #endregion
    
    public const int KindFieldNumber = 1;
    private bool hasKind;
    private global::Landman.Rascal.CLRInfo.Protobuf.Id.Types.IdKind kind_ = global::Landman.Rascal.CLRInfo.Protobuf.Id.Types.IdKind.Namespace;
    public bool HasKind {
      get { return hasKind; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Id.Types.IdKind Kind {
      get { return kind_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int ParamsFieldNumber = 3;
    private pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.Entity> params_ = new pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.Entity>();
    public scg::IList<global::Landman.Rascal.CLRInfo.Protobuf.Entity> ParamsList {
      get { return params_; }
    }
    public int ParamsCount {
      get { return params_.Count; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Entity GetParams(int index) {
      return params_[index];
    }
    
    public const int ReturnTypeFieldNumber = 4;
    private bool hasReturnType;
    private global::Landman.Rascal.CLRInfo.Protobuf.Entity returnType_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance;
    public bool HasReturnType {
      get { return hasReturnType; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Entity ReturnType {
      get { return returnType_; }
    }
    
    public const int SetterFieldNumber = 5;
    private bool hasSetter;
    private global::Landman.Rascal.CLRInfo.Protobuf.Entity setter_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance;
    public bool HasSetter {
      get { return hasSetter; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Entity Setter {
      get { return setter_; }
    }
    
    public const int GetterFieldNumber = 6;
    private bool hasGetter;
    private global::Landman.Rascal.CLRInfo.Protobuf.Entity getter_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance;
    public bool HasGetter {
      get { return hasGetter; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Entity Getter {
      get { return getter_; }
    }
    
    public const int Id_FieldNumber = 7;
    private bool hasId_;
    private int Id_ = 0;
    public bool HasId_ {
      get { return hasId_; }
    }
    public int Id_ {
      get { return Id_; }
    }
    
    public const int PrimitiveTypeFieldNumber = 8;
    private bool hasPrimitiveType;
    private global::Landman.Rascal.CLRInfo.Protobuf.Id.Types.PrimitiveType PrimitiveType_ = global::Landman.Rascal.CLRInfo.Protobuf.Id.Types.PrimitiveType.Bool;
    public bool HasPrimitiveType {
      get { return hasPrimitiveType; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Id.Types.PrimitiveType PrimitiveType {
      get { return PrimitiveType_; }
    }
    
    public const int ElementTypeFieldNumber = 9;
    private bool hasElementType;
    private global::Landman.Rascal.CLRInfo.Protobuf.Entity elementType_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance;
    public bool HasElementType {
      get { return hasElementType; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Entity ElementType {
      get { return elementType_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasKind) return false;
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.Entity element in ParamsList) {
          if (!element.IsInitialized) return false;
        }
        if (HasReturnType) {
          if (!ReturnType.IsInitialized) return false;
        }
        if (HasSetter) {
          if (!Setter.IsInitialized) return false;
        }
        if (HasGetter) {
          if (!Getter.IsInitialized) return false;
        }
        if (HasElementType) {
          if (!ElementType.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasKind) {
        output.WriteEnum(1, (int) Kind);
      }
      if (HasName) {
        output.WriteString(2, Name);
      }
      foreach (global::Landman.Rascal.CLRInfo.Protobuf.Entity element in ParamsList) {
        output.WriteMessage(3, element);
      }
      if (HasReturnType) {
        output.WriteMessage(4, ReturnType);
      }
      if (HasSetter) {
        output.WriteMessage(5, Setter);
      }
      if (HasGetter) {
        output.WriteMessage(6, Getter);
      }
      if (HasId_) {
        output.WriteInt32(7, Id_);
      }
      if (HasPrimitiveType) {
        output.WriteEnum(8, (int) PrimitiveType);
      }
      if (HasElementType) {
        output.WriteMessage(9, ElementType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasKind) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Kind);
        }
        if (HasName) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Name);
        }
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.Entity element in ParamsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        if (HasReturnType) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, ReturnType);
        }
        if (HasSetter) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Setter);
        }
        if (HasGetter) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, Getter);
        }
        if (HasId_) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, Id_);
        }
        if (HasPrimitiveType) {
          size += pb::CodedOutputStream.ComputeEnumSize(8, (int) PrimitiveType);
        }
        if (HasElementType) {
          size += pb::CodedOutputStream.ComputeMessageSize(9, ElementType);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Id ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Id ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Id ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Id ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Id ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Id ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Id ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Id ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Id ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Id ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Id prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<Id, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      Id result = new Id();
      
      protected override Id MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new Id();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Landman.Rascal.CLRInfo.Protobuf.Id.Descriptor; }
      }
      
      public override Id DefaultInstanceForType {
        get { return global::Landman.Rascal.CLRInfo.Protobuf.Id.DefaultInstance; }
      }
      
      public override Id BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.params_.MakeReadOnly();
        Id returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Id) {
          return MergeFrom((Id) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Id other) {
        if (other == global::Landman.Rascal.CLRInfo.Protobuf.Id.DefaultInstance) return this;
        if (other.HasKind) {
          Kind = other.Kind;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.params_.Count != 0) {
          base.AddRange(other.params_, result.params_);
        }
        if (other.HasReturnType) {
          MergeReturnType(other.ReturnType);
        }
        if (other.HasSetter) {
          MergeSetter(other.Setter);
        }
        if (other.HasGetter) {
          MergeGetter(other.Getter);
        }
        if (other.HasId_) {
          Id_ = other.Id_;
        }
        if (other.HasPrimitiveType) {
          PrimitiveType = other.PrimitiveType;
        }
        if (other.HasElementType) {
          MergeElementType(other.ElementType);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              int rawValue = input.ReadEnum();
              if (!global::System.Enum.IsDefined(typeof(global::Landman.Rascal.CLRInfo.Protobuf.Id.Types.IdKind), rawValue)) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong) rawValue);
              } else {
                Kind = (global::Landman.Rascal.CLRInfo.Protobuf.Id.Types.IdKind) rawValue;
              }
              break;
            }
            case 18: {
              Name = input.ReadString();
              break;
            }
            case 26: {
              global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddParams(subBuilder.BuildPartial());
              break;
            }
            case 34: {
              global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder();
              if (HasReturnType) {
                subBuilder.MergeFrom(ReturnType);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReturnType = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder();
              if (HasSetter) {
                subBuilder.MergeFrom(Setter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Setter = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder();
              if (HasGetter) {
                subBuilder.MergeFrom(Getter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Getter = subBuilder.BuildPartial();
              break;
            }
            case 56: {
              Id_ = input.ReadInt32();
              break;
            }
            case 64: {
              int rawValue = input.ReadEnum();
              if (!global::System.Enum.IsDefined(typeof(global::Landman.Rascal.CLRInfo.Protobuf.Id.Types.PrimitiveType), rawValue)) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(8, (ulong) rawValue);
              } else {
                PrimitiveType = (global::Landman.Rascal.CLRInfo.Protobuf.Id.Types.PrimitiveType) rawValue;
              }
              break;
            }
            case 74: {
              global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder();
              if (HasElementType) {
                subBuilder.MergeFrom(ElementType);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ElementType = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasKind {
       get { return result.HasKind; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Id.Types.IdKind Kind {
        get { return result.Kind; }
        set { SetKind(value); }
      }
      public Builder SetKind(global::Landman.Rascal.CLRInfo.Protobuf.Id.Types.IdKind value) {
        result.hasKind = true;
        result.kind_ = value;
        return this;
      }
      public Builder ClearKind() {
        result.hasKind = false;
        result.kind_ = global::Landman.Rascal.CLRInfo.Protobuf.Id.Types.IdKind.Namespace;
        return this;
      }
      
      public bool HasName {
        get { return result.HasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.Entity> ParamsList {
        get { return result.params_; }
      }
      public int ParamsCount {
        get { return result.ParamsCount; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Entity GetParams(int index) {
        return result.GetParams(index);
      }
      public Builder SetParams(int index, global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.params_[index] = value;
        return this;
      }
      public Builder SetParams(int index, global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.params_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddParams(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.params_.Add(value);
        return this;
      }
      public Builder AddParams(global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.params_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeParams(scg::IEnumerable<global::Landman.Rascal.CLRInfo.Protobuf.Entity> values) {
        base.AddRange(values, result.params_);
        return this;
      }
      public Builder ClearParams() {
        result.params_.Clear();
        return this;
      }
      
      public bool HasReturnType {
       get { return result.HasReturnType; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Entity ReturnType {
        get { return result.ReturnType; }
        set { SetReturnType(value); }
      }
      public Builder SetReturnType(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasReturnType = true;
        result.returnType_ = value;
        return this;
      }
      public Builder SetReturnType(global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasReturnType = true;
        result.returnType_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReturnType(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasReturnType &&
            result.returnType_ != global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance) {
            result.returnType_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder(result.returnType_).MergeFrom(value).BuildPartial();
        } else {
          result.returnType_ = value;
        }
        result.hasReturnType = true;
        return this;
      }
      public Builder ClearReturnType() {
        result.hasReturnType = false;
        result.returnType_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance;
        return this;
      }
      
      public bool HasSetter {
       get { return result.HasSetter; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Entity Setter {
        get { return result.Setter; }
        set { SetSetter(value); }
      }
      public Builder SetSetter(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasSetter = true;
        result.setter_ = value;
        return this;
      }
      public Builder SetSetter(global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasSetter = true;
        result.setter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSetter(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasSetter &&
            result.setter_ != global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance) {
            result.setter_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder(result.setter_).MergeFrom(value).BuildPartial();
        } else {
          result.setter_ = value;
        }
        result.hasSetter = true;
        return this;
      }
      public Builder ClearSetter() {
        result.hasSetter = false;
        result.setter_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance;
        return this;
      }
      
      public bool HasGetter {
       get { return result.HasGetter; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Entity Getter {
        get { return result.Getter; }
        set { SetGetter(value); }
      }
      public Builder SetGetter(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasGetter = true;
        result.getter_ = value;
        return this;
      }
      public Builder SetGetter(global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasGetter = true;
        result.getter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGetter(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasGetter &&
            result.getter_ != global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance) {
            result.getter_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder(result.getter_).MergeFrom(value).BuildPartial();
        } else {
          result.getter_ = value;
        }
        result.hasGetter = true;
        return this;
      }
      public Builder ClearGetter() {
        result.hasGetter = false;
        result.getter_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance;
        return this;
      }
      
      public bool HasId_ {
        get { return result.HasId_; }
      }
      public int Id_ {
        get { return result.Id_; }
        set { SetId_(value); }
      }
      public Builder SetId_(int value) {
        result.hasId_ = true;
        result.Id_ = value;
        return this;
      }
      public Builder ClearId_() {
        result.hasId_ = false;
        result.Id_ = 0;
        return this;
      }
      
      public bool HasPrimitiveType {
       get { return result.HasPrimitiveType; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Id.Types.PrimitiveType PrimitiveType {
        get { return result.PrimitiveType; }
        set { SetPrimitiveType(value); }
      }
      public Builder SetPrimitiveType(global::Landman.Rascal.CLRInfo.Protobuf.Id.Types.PrimitiveType value) {
        result.hasPrimitiveType = true;
        result.PrimitiveType_ = value;
        return this;
      }
      public Builder ClearPrimitiveType() {
        result.hasPrimitiveType = false;
        result.PrimitiveType_ = global::Landman.Rascal.CLRInfo.Protobuf.Id.Types.PrimitiveType.Bool;
        return this;
      }
      
      public bool HasElementType {
       get { return result.HasElementType; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Entity ElementType {
        get { return result.ElementType; }
        set { SetElementType(value); }
      }
      public Builder SetElementType(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasElementType = true;
        result.elementType_ = value;
        return this;
      }
      public Builder SetElementType(global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasElementType = true;
        result.elementType_ = builderForValue.Build();
        return this;
      }
      public Builder MergeElementType(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasElementType &&
            result.elementType_ != global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance) {
            result.elementType_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder(result.elementType_).MergeFrom(value).BuildPartial();
        } else {
          result.elementType_ = value;
        }
        result.hasElementType = true;
        return this;
      }
      public Builder ClearElementType() {
        result.hasElementType = false;
        result.elementType_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance;
        return this;
      }
    }
    static Id() {
      object.ReferenceEquals(global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.Descriptor, null);
    }
  }
  
  public sealed partial class Constrain : pb::GeneratedMessage<Constrain, Constrain.Builder> {
    private static readonly Constrain defaultInstance = new Builder().BuildPartial();
    public static Constrain DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Constrain DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override Constrain ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.internal__static_Landman_Rascal_CLRInfo_Protobuf_Constrain__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Constrain, Constrain.Builder> InternalFieldAccessors {
      get { return global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.internal__static_Landman_Rascal_CLRInfo_Protobuf_Constrain__FieldAccessorTable; }
    }
    
    #region Nested types
    public static class Types {
      public enum ConstrainKind {
        None = 0,
        Entity = 1,
        IsClass = 2,
        IsStruct = 3,
        HasConstructor = 4,
      }
      
    }
    #endregion
    
    public const int KindFieldNumber = 1;
    private bool hasKind;
    private global::Landman.Rascal.CLRInfo.Protobuf.Constrain.Types.ConstrainKind kind_ = global::Landman.Rascal.CLRInfo.Protobuf.Constrain.Types.ConstrainKind.None;
    public bool HasKind {
      get { return hasKind; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Constrain.Types.ConstrainKind Kind {
      get { return kind_; }
    }
    
    public const int ConstrainEntityFieldNumber = 2;
    private bool hasConstrainEntity;
    private global::Landman.Rascal.CLRInfo.Protobuf.Entity constrainEntity_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance;
    public bool HasConstrainEntity {
      get { return hasConstrainEntity; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Entity ConstrainEntity {
      get { return constrainEntity_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasKind) return false;
        if (HasConstrainEntity) {
          if (!ConstrainEntity.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasKind) {
        output.WriteEnum(1, (int) Kind);
      }
      if (HasConstrainEntity) {
        output.WriteMessage(2, ConstrainEntity);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasKind) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Kind);
        }
        if (HasConstrainEntity) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ConstrainEntity);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Constrain ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Constrain ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Constrain ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Constrain ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Constrain ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Constrain ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Constrain ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Constrain ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Constrain ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Constrain ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Constrain prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<Constrain, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      Constrain result = new Constrain();
      
      protected override Constrain MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new Constrain();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Landman.Rascal.CLRInfo.Protobuf.Constrain.Descriptor; }
      }
      
      public override Constrain DefaultInstanceForType {
        get { return global::Landman.Rascal.CLRInfo.Protobuf.Constrain.DefaultInstance; }
      }
      
      public override Constrain BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        Constrain returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Constrain) {
          return MergeFrom((Constrain) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Constrain other) {
        if (other == global::Landman.Rascal.CLRInfo.Protobuf.Constrain.DefaultInstance) return this;
        if (other.HasKind) {
          Kind = other.Kind;
        }
        if (other.HasConstrainEntity) {
          MergeConstrainEntity(other.ConstrainEntity);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              int rawValue = input.ReadEnum();
              if (!global::System.Enum.IsDefined(typeof(global::Landman.Rascal.CLRInfo.Protobuf.Constrain.Types.ConstrainKind), rawValue)) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong) rawValue);
              } else {
                Kind = (global::Landman.Rascal.CLRInfo.Protobuf.Constrain.Types.ConstrainKind) rawValue;
              }
              break;
            }
            case 18: {
              global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder();
              if (HasConstrainEntity) {
                subBuilder.MergeFrom(ConstrainEntity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConstrainEntity = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasKind {
       get { return result.HasKind; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Constrain.Types.ConstrainKind Kind {
        get { return result.Kind; }
        set { SetKind(value); }
      }
      public Builder SetKind(global::Landman.Rascal.CLRInfo.Protobuf.Constrain.Types.ConstrainKind value) {
        result.hasKind = true;
        result.kind_ = value;
        return this;
      }
      public Builder ClearKind() {
        result.hasKind = false;
        result.kind_ = global::Landman.Rascal.CLRInfo.Protobuf.Constrain.Types.ConstrainKind.None;
        return this;
      }
      
      public bool HasConstrainEntity {
       get { return result.HasConstrainEntity; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Entity ConstrainEntity {
        get { return result.ConstrainEntity; }
        set { SetConstrainEntity(value); }
      }
      public Builder SetConstrainEntity(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasConstrainEntity = true;
        result.constrainEntity_ = value;
        return this;
      }
      public Builder SetConstrainEntity(global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasConstrainEntity = true;
        result.constrainEntity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConstrainEntity(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasConstrainEntity &&
            result.constrainEntity_ != global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance) {
            result.constrainEntity_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder(result.constrainEntity_).MergeFrom(value).BuildPartial();
        } else {
          result.constrainEntity_ = value;
        }
        result.hasConstrainEntity = true;
        return this;
      }
      public Builder ClearConstrainEntity() {
        result.hasConstrainEntity = false;
        result.constrainEntity_ = global::Landman.Rascal.CLRInfo.Protobuf.Entity.DefaultInstance;
        return this;
      }
    }
    static Constrain() {
      object.ReferenceEquals(global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.Descriptor, null);
    }
  }
  
  public sealed partial class InformationRequest : pb::GeneratedMessage<InformationRequest, InformationRequest.Builder> {
    private static readonly InformationRequest defaultInstance = new Builder().BuildPartial();
    public static InformationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InformationRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override InformationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.internal__static_Landman_Rascal_CLRInfo_Protobuf_InformationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InformationRequest, InformationRequest.Builder> InternalFieldAccessors {
      get { return global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.internal__static_Landman_Rascal_CLRInfo_Protobuf_InformationRequest__FieldAccessorTable; }
    }
    
    public const int AssembliesFieldNumber = 1;
    private pbc::PopsicleList<string> assemblies_ = new pbc::PopsicleList<string>();
    public scg::IList<string> AssembliesList {
      get { return pbc::Lists.AsReadOnly(assemblies_); }
    }
    public int AssembliesCount {
      get { return assemblies_.Count; }
    }
    public string GetAssemblies(int index) {
      return assemblies_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (assemblies_.Count > 0) {
        foreach (string element in assemblies_) {
          output.WriteString(1, element);
        }
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        {
          int dataSize = 0;
          foreach (string element in AssembliesList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * assemblies_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static InformationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InformationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InformationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InformationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InformationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InformationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InformationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InformationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InformationRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InformationRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InformationRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<InformationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      InformationRequest result = new InformationRequest();
      
      protected override InformationRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new InformationRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Landman.Rascal.CLRInfo.Protobuf.InformationRequest.Descriptor; }
      }
      
      public override InformationRequest DefaultInstanceForType {
        get { return global::Landman.Rascal.CLRInfo.Protobuf.InformationRequest.DefaultInstance; }
      }
      
      public override InformationRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.assemblies_.MakeReadOnly();
        InformationRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InformationRequest) {
          return MergeFrom((InformationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InformationRequest other) {
        if (other == global::Landman.Rascal.CLRInfo.Protobuf.InformationRequest.DefaultInstance) return this;
        if (other.assemblies_.Count != 0) {
          base.AddRange(other.assemblies_, result.assemblies_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              AddAssemblies(input.ReadString());
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<string> AssembliesList {
        get { return result.assemblies_; }
      }
      public int AssembliesCount {
        get { return result.AssembliesCount; }
      }
      public string GetAssemblies(int index) {
        return result.GetAssemblies(index);
      }
      public Builder SetAssemblies(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.assemblies_[index] = value;
        return this;
      }
      public Builder AddAssemblies(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.assemblies_.Add(value);
        return this;
      }
      public Builder AddRangeAssemblies(scg::IEnumerable<string> values) {
        base.AddRange(values, result.assemblies_);
        return this;
      }
      public Builder ClearAssemblies() {
        result.assemblies_.Clear();
        return this;
      }
    }
    static InformationRequest() {
      object.ReferenceEquals(global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.Descriptor, null);
    }
  }
  
  public sealed partial class InformationResponse : pb::GeneratedMessage<InformationResponse, InformationResponse.Builder> {
    private static readonly InformationResponse defaultInstance = new Builder().BuildPartial();
    public static InformationResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InformationResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override InformationResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.internal__static_Landman_Rascal_CLRInfo_Protobuf_InformationResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InformationResponse, InformationResponse.Builder> InternalFieldAccessors {
      get { return global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.internal__static_Landman_Rascal_CLRInfo_Protobuf_InformationResponse__FieldAccessorTable; }
    }
    
    public const int TypesFieldNumber = 1;
    private pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.Entity> types_ = new pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.Entity>();
    public scg::IList<global::Landman.Rascal.CLRInfo.Protobuf.Entity> TypesList {
      get { return types_; }
    }
    public int TypesCount {
      get { return types_.Count; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Entity GetTypes(int index) {
      return types_[index];
    }
    
    public const int MethodsFieldNumber = 2;
    private pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.Entity> methods_ = new pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.Entity>();
    public scg::IList<global::Landman.Rascal.CLRInfo.Protobuf.Entity> MethodsList {
      get { return methods_; }
    }
    public int MethodsCount {
      get { return methods_.Count; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Entity GetMethods(int index) {
      return methods_[index];
    }
    
    public const int FieldsFieldNumber = 3;
    private pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.Entity> fields_ = new pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.Entity>();
    public scg::IList<global::Landman.Rascal.CLRInfo.Protobuf.Entity> FieldsList {
      get { return fields_; }
    }
    public int FieldsCount {
      get { return fields_.Count; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Entity GetFields(int index) {
      return fields_[index];
    }
    
    public const int PropertiesFieldNumber = 4;
    private pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.Entity> properties_ = new pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.Entity>();
    public scg::IList<global::Landman.Rascal.CLRInfo.Protobuf.Entity> PropertiesList {
      get { return properties_; }
    }
    public int PropertiesCount {
      get { return properties_.Count; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.Entity GetProperties(int index) {
      return properties_[index];
    }
    
    public const int TypesInheritanceFieldNumber = 10;
    private pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.EntityRel> typesInheritance_ = new pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.EntityRel>();
    public scg::IList<global::Landman.Rascal.CLRInfo.Protobuf.EntityRel> TypesInheritanceList {
      get { return typesInheritance_; }
    }
    public int TypesInheritanceCount {
      get { return typesInheritance_.Count; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.EntityRel GetTypesInheritance(int index) {
      return typesInheritance_[index];
    }
    
    public const int TypesImplementingFieldNumber = 11;
    private pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.EntityRel> typesImplementing_ = new pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.EntityRel>();
    public scg::IList<global::Landman.Rascal.CLRInfo.Protobuf.EntityRel> TypesImplementingList {
      get { return typesImplementing_; }
    }
    public int TypesImplementingCount {
      get { return typesImplementing_.Count; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.EntityRel GetTypesImplementing(int index) {
      return typesImplementing_[index];
    }
    
    public const int MethodCallsFieldNumber = 20;
    private pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.EntityRel> methodCalls_ = new pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.EntityRel>();
    public scg::IList<global::Landman.Rascal.CLRInfo.Protobuf.EntityRel> MethodCallsList {
      get { return methodCalls_; }
    }
    public int MethodCallsCount {
      get { return methodCalls_.Count; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.EntityRel GetMethodCalls(int index) {
      return methodCalls_[index];
    }
    
    public const int ModifiersFieldNumber = 30;
    private pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel> modifiers_ = new pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel>();
    public scg::IList<global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel> ModifiersList {
      get { return modifiers_; }
    }
    public int ModifiersCount {
      get { return modifiers_.Count; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel GetModifiers(int index) {
      return modifiers_[index];
    }
    
    public const int GenericConstrainsFieldNumber = 31;
    private pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel> genericConstrains_ = new pbc::PopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel>();
    public scg::IList<global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel> GenericConstrainsList {
      get { return genericConstrains_; }
    }
    public int GenericConstrainsCount {
      get { return genericConstrains_.Count; }
    }
    public global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel GetGenericConstrains(int index) {
      return genericConstrains_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.Entity element in TypesList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.Entity element in MethodsList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.Entity element in FieldsList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.Entity element in PropertiesList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.EntityRel element in TypesInheritanceList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.EntityRel element in TypesImplementingList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.EntityRel element in MethodCallsList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel element in ModifiersList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel element in GenericConstrainsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::Landman.Rascal.CLRInfo.Protobuf.Entity element in TypesList) {
        output.WriteMessage(1, element);
      }
      foreach (global::Landman.Rascal.CLRInfo.Protobuf.Entity element in MethodsList) {
        output.WriteMessage(2, element);
      }
      foreach (global::Landman.Rascal.CLRInfo.Protobuf.Entity element in FieldsList) {
        output.WriteMessage(3, element);
      }
      foreach (global::Landman.Rascal.CLRInfo.Protobuf.Entity element in PropertiesList) {
        output.WriteMessage(4, element);
      }
      foreach (global::Landman.Rascal.CLRInfo.Protobuf.EntityRel element in TypesInheritanceList) {
        output.WriteMessage(10, element);
      }
      foreach (global::Landman.Rascal.CLRInfo.Protobuf.EntityRel element in TypesImplementingList) {
        output.WriteMessage(11, element);
      }
      foreach (global::Landman.Rascal.CLRInfo.Protobuf.EntityRel element in MethodCallsList) {
        output.WriteMessage(20, element);
      }
      foreach (global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel element in ModifiersList) {
        output.WriteMessage(30, element);
      }
      foreach (global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel element in GenericConstrainsList) {
        output.WriteMessage(31, element);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.Entity element in TypesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.Entity element in MethodsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.Entity element in FieldsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.Entity element in PropertiesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.EntityRel element in TypesInheritanceList) {
          size += pb::CodedOutputStream.ComputeMessageSize(10, element);
        }
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.EntityRel element in TypesImplementingList) {
          size += pb::CodedOutputStream.ComputeMessageSize(11, element);
        }
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.EntityRel element in MethodCallsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(20, element);
        }
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel element in ModifiersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(30, element);
        }
        foreach (global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel element in GenericConstrainsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(31, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static InformationResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InformationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InformationResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InformationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InformationResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InformationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InformationResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InformationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InformationResponse ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InformationResponse ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InformationResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<InformationResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      InformationResponse result = new InformationResponse();
      
      protected override InformationResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new InformationResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Landman.Rascal.CLRInfo.Protobuf.InformationResponse.Descriptor; }
      }
      
      public override InformationResponse DefaultInstanceForType {
        get { return global::Landman.Rascal.CLRInfo.Protobuf.InformationResponse.DefaultInstance; }
      }
      
      public override InformationResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.types_.MakeReadOnly();
        result.methods_.MakeReadOnly();
        result.fields_.MakeReadOnly();
        result.properties_.MakeReadOnly();
        result.typesInheritance_.MakeReadOnly();
        result.typesImplementing_.MakeReadOnly();
        result.methodCalls_.MakeReadOnly();
        result.modifiers_.MakeReadOnly();
        result.genericConstrains_.MakeReadOnly();
        InformationResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InformationResponse) {
          return MergeFrom((InformationResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InformationResponse other) {
        if (other == global::Landman.Rascal.CLRInfo.Protobuf.InformationResponse.DefaultInstance) return this;
        if (other.types_.Count != 0) {
          base.AddRange(other.types_, result.types_);
        }
        if (other.methods_.Count != 0) {
          base.AddRange(other.methods_, result.methods_);
        }
        if (other.fields_.Count != 0) {
          base.AddRange(other.fields_, result.fields_);
        }
        if (other.properties_.Count != 0) {
          base.AddRange(other.properties_, result.properties_);
        }
        if (other.typesInheritance_.Count != 0) {
          base.AddRange(other.typesInheritance_, result.typesInheritance_);
        }
        if (other.typesImplementing_.Count != 0) {
          base.AddRange(other.typesImplementing_, result.typesImplementing_);
        }
        if (other.methodCalls_.Count != 0) {
          base.AddRange(other.methodCalls_, result.methodCalls_);
        }
        if (other.modifiers_.Count != 0) {
          base.AddRange(other.modifiers_, result.modifiers_);
        }
        if (other.genericConstrains_.Count != 0) {
          base.AddRange(other.genericConstrains_, result.genericConstrains_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddTypes(subBuilder.BuildPartial());
              break;
            }
            case 18: {
              global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddMethods(subBuilder.BuildPartial());
              break;
            }
            case 26: {
              global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddFields(subBuilder.BuildPartial());
              break;
            }
            case 34: {
              global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.Entity.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddProperties(subBuilder.BuildPartial());
              break;
            }
            case 82: {
              global::Landman.Rascal.CLRInfo.Protobuf.EntityRel.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.EntityRel.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddTypesInheritance(subBuilder.BuildPartial());
              break;
            }
            case 90: {
              global::Landman.Rascal.CLRInfo.Protobuf.EntityRel.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.EntityRel.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddTypesImplementing(subBuilder.BuildPartial());
              break;
            }
            case 162: {
              global::Landman.Rascal.CLRInfo.Protobuf.EntityRel.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.EntityRel.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddMethodCalls(subBuilder.BuildPartial());
              break;
            }
            case 242: {
              global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddModifiers(subBuilder.BuildPartial());
              break;
            }
            case 250: {
              global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel.Builder subBuilder = global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddGenericConstrains(subBuilder.BuildPartial());
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.Entity> TypesList {
        get { return result.types_; }
      }
      public int TypesCount {
        get { return result.TypesCount; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Entity GetTypes(int index) {
        return result.GetTypes(index);
      }
      public Builder SetTypes(int index, global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.types_[index] = value;
        return this;
      }
      public Builder SetTypes(int index, global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.types_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTypes(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.types_.Add(value);
        return this;
      }
      public Builder AddTypes(global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.types_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTypes(scg::IEnumerable<global::Landman.Rascal.CLRInfo.Protobuf.Entity> values) {
        base.AddRange(values, result.types_);
        return this;
      }
      public Builder ClearTypes() {
        result.types_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.Entity> MethodsList {
        get { return result.methods_; }
      }
      public int MethodsCount {
        get { return result.MethodsCount; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Entity GetMethods(int index) {
        return result.GetMethods(index);
      }
      public Builder SetMethods(int index, global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.methods_[index] = value;
        return this;
      }
      public Builder SetMethods(int index, global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.methods_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMethods(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.methods_.Add(value);
        return this;
      }
      public Builder AddMethods(global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.methods_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMethods(scg::IEnumerable<global::Landman.Rascal.CLRInfo.Protobuf.Entity> values) {
        base.AddRange(values, result.methods_);
        return this;
      }
      public Builder ClearMethods() {
        result.methods_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.Entity> FieldsList {
        get { return result.fields_; }
      }
      public int FieldsCount {
        get { return result.FieldsCount; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Entity GetFields(int index) {
        return result.GetFields(index);
      }
      public Builder SetFields(int index, global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.fields_[index] = value;
        return this;
      }
      public Builder SetFields(int index, global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.fields_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFields(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.fields_.Add(value);
        return this;
      }
      public Builder AddFields(global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.fields_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFields(scg::IEnumerable<global::Landman.Rascal.CLRInfo.Protobuf.Entity> values) {
        base.AddRange(values, result.fields_);
        return this;
      }
      public Builder ClearFields() {
        result.fields_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.Entity> PropertiesList {
        get { return result.properties_; }
      }
      public int PropertiesCount {
        get { return result.PropertiesCount; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.Entity GetProperties(int index) {
        return result.GetProperties(index);
      }
      public Builder SetProperties(int index, global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.properties_[index] = value;
        return this;
      }
      public Builder SetProperties(int index, global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.properties_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddProperties(global::Landman.Rascal.CLRInfo.Protobuf.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.properties_.Add(value);
        return this;
      }
      public Builder AddProperties(global::Landman.Rascal.CLRInfo.Protobuf.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.properties_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeProperties(scg::IEnumerable<global::Landman.Rascal.CLRInfo.Protobuf.Entity> values) {
        base.AddRange(values, result.properties_);
        return this;
      }
      public Builder ClearProperties() {
        result.properties_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.EntityRel> TypesInheritanceList {
        get { return result.typesInheritance_; }
      }
      public int TypesInheritanceCount {
        get { return result.TypesInheritanceCount; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.EntityRel GetTypesInheritance(int index) {
        return result.GetTypesInheritance(index);
      }
      public Builder SetTypesInheritance(int index, global::Landman.Rascal.CLRInfo.Protobuf.EntityRel value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.typesInheritance_[index] = value;
        return this;
      }
      public Builder SetTypesInheritance(int index, global::Landman.Rascal.CLRInfo.Protobuf.EntityRel.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.typesInheritance_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTypesInheritance(global::Landman.Rascal.CLRInfo.Protobuf.EntityRel value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.typesInheritance_.Add(value);
        return this;
      }
      public Builder AddTypesInheritance(global::Landman.Rascal.CLRInfo.Protobuf.EntityRel.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.typesInheritance_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTypesInheritance(scg::IEnumerable<global::Landman.Rascal.CLRInfo.Protobuf.EntityRel> values) {
        base.AddRange(values, result.typesInheritance_);
        return this;
      }
      public Builder ClearTypesInheritance() {
        result.typesInheritance_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.EntityRel> TypesImplementingList {
        get { return result.typesImplementing_; }
      }
      public int TypesImplementingCount {
        get { return result.TypesImplementingCount; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.EntityRel GetTypesImplementing(int index) {
        return result.GetTypesImplementing(index);
      }
      public Builder SetTypesImplementing(int index, global::Landman.Rascal.CLRInfo.Protobuf.EntityRel value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.typesImplementing_[index] = value;
        return this;
      }
      public Builder SetTypesImplementing(int index, global::Landman.Rascal.CLRInfo.Protobuf.EntityRel.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.typesImplementing_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTypesImplementing(global::Landman.Rascal.CLRInfo.Protobuf.EntityRel value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.typesImplementing_.Add(value);
        return this;
      }
      public Builder AddTypesImplementing(global::Landman.Rascal.CLRInfo.Protobuf.EntityRel.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.typesImplementing_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTypesImplementing(scg::IEnumerable<global::Landman.Rascal.CLRInfo.Protobuf.EntityRel> values) {
        base.AddRange(values, result.typesImplementing_);
        return this;
      }
      public Builder ClearTypesImplementing() {
        result.typesImplementing_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.EntityRel> MethodCallsList {
        get { return result.methodCalls_; }
      }
      public int MethodCallsCount {
        get { return result.MethodCallsCount; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.EntityRel GetMethodCalls(int index) {
        return result.GetMethodCalls(index);
      }
      public Builder SetMethodCalls(int index, global::Landman.Rascal.CLRInfo.Protobuf.EntityRel value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.methodCalls_[index] = value;
        return this;
      }
      public Builder SetMethodCalls(int index, global::Landman.Rascal.CLRInfo.Protobuf.EntityRel.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.methodCalls_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMethodCalls(global::Landman.Rascal.CLRInfo.Protobuf.EntityRel value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.methodCalls_.Add(value);
        return this;
      }
      public Builder AddMethodCalls(global::Landman.Rascal.CLRInfo.Protobuf.EntityRel.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.methodCalls_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMethodCalls(scg::IEnumerable<global::Landman.Rascal.CLRInfo.Protobuf.EntityRel> values) {
        base.AddRange(values, result.methodCalls_);
        return this;
      }
      public Builder ClearMethodCalls() {
        result.methodCalls_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel> ModifiersList {
        get { return result.modifiers_; }
      }
      public int ModifiersCount {
        get { return result.ModifiersCount; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel GetModifiers(int index) {
        return result.GetModifiers(index);
      }
      public Builder SetModifiers(int index, global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.modifiers_[index] = value;
        return this;
      }
      public Builder SetModifiers(int index, global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.modifiers_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddModifiers(global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.modifiers_.Add(value);
        return this;
      }
      public Builder AddModifiers(global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.modifiers_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeModifiers(scg::IEnumerable<global::Landman.Rascal.CLRInfo.Protobuf.ModifierRel> values) {
        base.AddRange(values, result.modifiers_);
        return this;
      }
      public Builder ClearModifiers() {
        result.modifiers_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel> GenericConstrainsList {
        get { return result.genericConstrains_; }
      }
      public int GenericConstrainsCount {
        get { return result.GenericConstrainsCount; }
      }
      public global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel GetGenericConstrains(int index) {
        return result.GetGenericConstrains(index);
      }
      public Builder SetGenericConstrains(int index, global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.genericConstrains_[index] = value;
        return this;
      }
      public Builder SetGenericConstrains(int index, global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.genericConstrains_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGenericConstrains(global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.genericConstrains_.Add(value);
        return this;
      }
      public Builder AddGenericConstrains(global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.genericConstrains_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGenericConstrains(scg::IEnumerable<global::Landman.Rascal.CLRInfo.Protobuf.ConstrainRel> values) {
        base.AddRange(values, result.genericConstrains_);
        return this;
      }
      public Builder ClearGenericConstrains() {
        result.genericConstrains_.Clear();
        return this;
      }
    }
    static InformationResponse() {
      object.ReferenceEquals(global::Landman.Rascal.CLRInfo.Protobuf.CLRInfoProtos.Descriptor, null);
    }
  }
  
  #endregion
  
}
